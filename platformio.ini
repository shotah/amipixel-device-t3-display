[platformio]
default_envs = T-Display-AMOLED
src_dir = src
boards_dir = boards


[env]
lib_extra_dirs = ${PROJECT_DIR} 
lib_ignore = lib_deps
platform = espressif32@6.7.0
framework = arduino
upload_speed =  921600
monitor_speed = 115200
build_flags =
    -DBOARD_HAS_PSRAM
    -DLV_CONF_INCLUDE_SIMPLE
    -DDISABLE_ALL_LIBRARY_WARNINGS
    ; Enable -DARDUINO_USB_CDC_ON_BOOT will start printing and wait for terminal access during startup
    -DARDUINO_USB_CDC_ON_BOOT=1
    ; USB host example must disable usb cdc
    ; Enable -UARDUINO_USB_CDC_ON_BOOT will turn off printing and will not block when using the battery
    ; -UARDUINO_USB_CDC_ON_BOOT
    -DCORE_DEBUG_LEVEL=1
    ; Use c+=17!!!
    ; c++ 17 standard: Working
    ;-std=gnu++17 
    ; c++ 20 standard: Working
    -std=gnu++2a
    ; c++ 23 standard: Not working
    ; -std=gnu++03
build_unflags =
    -std=gnu++11

monitor_filters =
	default
	esp32_exception_decoder

lib_deps = 
    xinyuan-lilygo/LilyGo-AMOLED-Series
    mikalhart/TinyGPSPlus
    adafruit/Adafruit NeoPixel
    bxparks/AceButton
    lvgl/lvgl @ 8.4.0
    ; lvgl/lvgl @ 9.2.2   ;How to use lvgl 9, please see README lvgl9 Upgrade Guide
    lewisxhe/XPowersLib
    lewisxhe/SensorLib
    bodmer/TFT_eSPI
    FS
    SPIFFS
    SD
    sparkfun/SparkFun MAX3010x Pulse and Proximity Sensor Library
    paulstoffregen/OneWire
    arduino-libraries/NTPClient
    Hieromon/PageBuilder

; ===================================
; === RUN LOCAL ===
; ===================================
[env:native]
platform = native
build_flags = 
    -std=c++11
    -DSIMULATION_MODE
    -I include
lib_deps =
    # Include only the libraries compatible with your host machine
    # Mockups for hardware-specific libraries

; ===================================
; === Testing ===
; ===================================
[env:test]
platform = native
board = T-Display-AMOLED
build_flags = 
    -std=c++11
    -DUNIT_TEST
    -DSIMULATION_MODE
    -I include
    -I src
    -I test/mocks
lib_deps =
    throwtheswitch/Unity
lib_compat_mode = off

; ===================================
; === Virtual Device Testing ===
; ===================================
[env:qemu_esp32]
platform = espressif32
board = esp32dev
framework = arduino
test_framework = unity
platform_packages =
    platformio/tool-qemu-xtensa@~1.0.0
test_testing_command =
    ${platformio.packages_dir}/tool-qemu-xtensa/bin/qemu-system-xtensa -machine esp32 -nographic -serial mon:stdio -kernel ${PROJECT_BUILD_DIR}/${PIOENV}/firmware.elf

; ===================================
; === Device ===
; ===================================
[env:T-Display-AMOLED]
extends = env
board = T-Display-AMOLED
build_flags =
    ${env.build_flags}
